// ПРИМЕР 1

// 1 Объясните почему код даёт именно такие результаты?
//пример 1
let a = 1,
    b = 1,
    c, d;
c = ++a;
alert(c); // ответ: 2, потому что инкремент увеличел значение операнда да 1;
//пример 2
d = b++;
alert(d); //ответ: 1, постфиксная форма, значене операнда увеличется после выполнения каманды;
//пример 3
c = 2 + ++a;
alert(c); //ответ: 5, так как а уже равно 2 , операнд увеличит а на 1, то значение а станет 3. 2+3=5;
//пример 4
d = 2 + b++;
alert(d); //ответ: 4, постфиксная форма, значене операнда увеличется после выполнения каманды, но так как предидущие действия в примере 2 с помощью постфиксной формы увеличили операнд на еденицу и он стал равен 2, то соответственно 2+2=4.
alert(a); //3, так как после примера 3, ни коких действий с переменно а не было значение осталось равным 3.
alert(b); //3, так как в римере 4, использовалась постфиксная форма, значение операнда увеличилось на 1, соответствено переменная b стала равна 3.


// ПРИМЕР 2

// 2 Чему будут равны переменные x и a в примере ниже? Написать почему так произошло
// (описать последовательность действий).
let a = 2;
let x = 1 + (a *= 2);
// ответ 5, так как () имеют самый высокий приоритет, то сначала производим вычисление в скобках, а*=2, это тоже самое, что а = а*2 или а = 2*2, соответственно переменна а = 4, отсюда следует что х = 1+4, х = 5;


// ПРИМЕР 3

// 3 Объявить две переменные a и b и задать им целочисленные произвольные начальные
// значения.
// Затем написать скрипт, который работает по следующему принципу:
//     -если a и b положительные, вывести их разность(ноль можно считать положительным числом);
//     - если а и b отрицательные, вывести их произведение;
// - * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
let a = +prompt("Введите первое число: ");
let b = +prompt("Введите второе число: ");;
let c = null;
if (a >= 0 && b >= 0) {
    c = a - b;
} else if (a < 0 && b < 0) {
    c = a * b;
} else {
    c = a + b;
}
alert(c);

// ПРИМЕР 4